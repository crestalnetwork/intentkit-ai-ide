{
  "$schema": "https://json-schema.org/draft/2020-12/schema#",
  "title": "Agent",
  "description": "Agent model",
  "type": "object",
  "x-groups": [
    {
      "id": "basic",
      "title": "Basic",
      "order": 1
    },
    {
      "id": "llm",
      "title": "LLM",
      "order": 2
    },
    {
      "id": "examples",
      "title": "Quick Actions",
      "order": 3
    },
    {
      "id": "onchain",
      "title": "On-Chain",
      "order": 4
    },
    {
      "id": "entrypoint",
      "title": "Communication Channels",
      "order": 5
    },
    {
      "id": "skills",
      "title": "Skills",
      "order": 6
    },
    {
      "id": "autonomous",
      "title": "Autonomous",
      "order": 7
    },
    {
      "id": "experimental",
      "title": "Experimental",
      "order": 8
    },
    {
      "id": "deprecated",
      "title": "Deprecated",
      "order": 9
    },
    {
      "id": "internal",
      "title": "Internal",
      "order": 10
    }
  ],
  "required": [
    "name"
  ],
  "properties": {
    "name": {
      "title": "Agent Name",
      "type": "string",
      "description": "Display name of the agent",
      "maxLength": 50,
      "x-group": "basic",
      "x-placeholder": "Enter agent name"
    },
    "ticker": {
      "title": "Ticker",
      "type": "string",
      "description": "Ticker symbol of the agent",
      "maxLength": 10,
      "minLength": 1,
      "x-group": "basic",
      "x-placeholder": "Enter agent ticker"
    },
    "token_address": {
      "title": "Token Address",
      "type": "string",
      "description": "Token address of the agent",
      "maxLength": 42,
      "readOnly": true,
      "x-group": "internal"
    },
    "token_pool": {
      "title": "Token Pool",
      "type": "string",
      "description": "Pool of the agent token",
      "maxLength": 42,
      "readOnly": true,
      "x-group": "internal"
    },
    "mode": {
      "title": "Usage Type",
      "type": "string",
      "description": "Mode of the agent, Public App or Personal Assistant",
      "enum": [
        "public",
        "private"
      ],
      "x-enum-title": [
        "Public App",
        "Personal Assistant"
      ],
      "x-group": "deprecated"
    },
    "fee_percentage": {
      "title": "Service Fee",
      "type": "number",
      "description": "A CAPs % added to the base cost, paid to the agent for delivering its unique logic and execution.",
      "minimum": 0,
      "maximum": 100,
      "default": 0,
      "x-step": 1,
      "x-group": "basic",
      "x-component": "slider-with-box",
      "x-nft-extra": 10
    },
    "description": {
      "title": "Description",
      "type": "string",
      "description": "Description of the agent, for public view, not contained in prompt",
      "maxLength": 3000,
      "x-group": "basic",
      "x-placeholder": "Introduce your agent"
    },
    "external_website": {
      "title": "External Website",
      "type": "string",
      "description": "Link of external website of the agent, if you have one",
      "format": "uri",
      "x-group": "basic",
      "x-placeholder": "Enter agent external website url"
    },
    "picture": {
      "title": "Picture",
      "type": "string",
      "description": "Picture of the agent",
      "x-group": "experimental",
      "x-placeholder": "Upload a picture of your agent"
    },
    "slug": {
      "title": "Slug",
      "type": "string",
      "description": "Slug of the agent, used for URL generation",
      "maxLength": 30,
      "minLength": 2,
      "readOnly": true,
      "x-group": "internal"
    },
    "owner": {
      "title": "Owner",
      "type": "string",
      "description": "Owner identifier of the agent, used for access control",
      "readOnly": true,
      "maxLength": 50,
      "x-group": "internal"
    },
    "upstream_id": {
      "title": "Upstream ID",
      "type": "string",
      "description": "External reference ID for idempotent operations",
      "readOnly": true,
      "maxLength": 100,
      "x-group": "internal"
    },
    "model": {
      "title": "AI Model",
      "type": "string",
      "description": "Select the LLM for your agent. Note that each LLM has its specific advantages, behaviour and cost.",
      "default": "gpt-4.1-mini",
      "enum": [
        "gpt-4.1-nano",
        "gpt-4.1-mini",
        "gpt-4.1",
        "o3",
        "o4-mini",
        "deepseek-chat",
        "deepseek-reasoner",
        "grok-2",
        "grok-3",
        "grok-3-mini",
        "venice-uncensored",
        "venice-llama-4-maverick-17b"
      ],
      "x-component": "category-select",
      "x-enum-title": [
        "GPT-4.1 nano",
        "GPT-4.1 mini",
        "GPT-4.1",
        "OpenAI o3",
        "OpenAI o4-mini",
        "Deepseek V3 (0324)",
        "Deepseek R1 (0528)",
        "Grok 2",
        "Grok 3",
        "Grok 3 Mini",
        "Venice Uncensored",
        "Venice Llama-4 Maverick 17B"
      ],
      "x-enum-category": [
        "OpenAI",
        "OpenAI",
        "OpenAI",
        "OpenAI",
        "OpenAI",
        "Deepseek",
        "Deepseek",
        "Grok",
        "Grok",
        "Grok",
        "Venice",
        "Venice"
      ],
      "x-support-skill": [true, true, true, true, true, true, true, true, true, true, true, true],
      "x-group": "llm"
    },
    "purpose": {
      "title": "Purpose",
      "type": "string",
      "description": "Tell the agent what's its purpose and what needs should it serve.",
      "maxLength": 20000,
      "pattern": "^(([^#].*)|#[^# ].*|#{3,}[ ].*|$)(\n(([^#].*)|#[^# ].*|#{3,}[ ].*|$))*$",
      "errorMessage": {
        "pattern": "Level 1 and 2 headings (# and ##) are not allowed. Please use level 3+ headings (###, ####, etc.) instead."
      },
      "x-group": "llm",
      "x-str-type": "prompt",
      "x-placeholder": "Enter agent purpose"
    },
    "personality": {
      "title": "Personality",
      "type": "string",
      "description": "Tell the agent what personality it should have and how it should communicate with the users.",
      "maxLength": 20000,
      "pattern": "^(([^#].*)|#[^# ].*|#{3,}[ ].*|$)(\n(([^#].*)|#[^# ].*|#{3,}[ ].*|$))*$",
      "errorMessage": {
        "pattern": "Level 1 and 2 headings (# and ##) are not allowed. Please use level 3+ headings (###, ####, etc.) instead."
      },
      "x-group": "llm",
      "x-str-type": "prompt",
      "x-placeholder": "Enter agent personality"
    },
    "principles": {
      "title": "Principles",
      "type": "string",
      "description": "Tell the agents what it should and shouldn't do when it interacts with users or skills.",
      "maxLength": 20000,
      "pattern": "^(([^#].*)|#[^# ].*|#{3,}[ ].*|$)(\n(([^#].*)|#[^# ].*|#{3,}[ ].*|$))*$",
      "errorMessage": {
        "pattern": "Level 1 and 2 headings (# and ##) are not allowed. Please use level 3+ headings (###, ####, etc.) instead."
      },
      "x-group": "llm",
      "x-str-type": "prompt",
      "x-placeholder": "Enter agent principles"
    },
    "prompt": {
      "title": "Knowledge Base",
      "type": "string",
      "description": "Give the agent any additional knowledge. Text only.",
      "maxLength": 20000,
      "pattern": "^(([^#].*)|#[^# ].*|#{3,}[ ].*|$)(\n(([^#].*)|#[^# ].*|#{3,}[ ].*|$))*$",
      "errorMessage": {
        "pattern": "Level 1 and 2 headings (# and ##) are not allowed. Please use level 3+ headings (###, ####, etc.) instead."
      },
      "x-str-type": "prompt",
      "x-group": "llm"
    },
    "prompt_append": {
      "title": "Advanced",
      "type": "string",
      "description": "Additional system prompt that has higher priority than initial system prompt, only some models support this, if not supported, this part will append to the end of initial system prompt",
      "maxLength": 20000,
      "pattern": "^(([^#].*)|#[^# ].*|#{3,}[ ].*|$)(\n(([^#].*)|#[^# ].*|#{3,}[ ].*|$))*$",
      "errorMessage": {
        "pattern": "Level 1 and 2 headings (# and ##) are not allowed. Please use level 3+ headings (###, ####, etc.) instead."
      },
      "x-str-type": "prompt",
      "x-group": "llm"
    },
    "temperature": {
      "title": "Temperature",
      "type": "number",
      "description": "Controls creativity: higher values are more creative, lower values are more precise. CHANGING THIS SETTING MAY INTRODUCE UNEXPECTED BEHAVIOR. USE WITH CAUTION.",
      "default": 0.7,
      "minimum": 0,
      "maximum": 1.5,
      "x-group": "llm",
      "x-step": 0.1
    },
    "frequency_penalty": {
      "title": "Frequency Penalty",
      "type": "number",
      "description": "Adjusts repetition: higher values encourage new topics, lower values allow repetition.",
      "default": 0,
      "minimum": -2,
      "maximum": 2,
      "x-group": "llm",
      "x-step": 0.1
    },
    "presence_penalty": {
      "title": "Presence Penalty",
      "type": "number",
      "description": "Controls topic focus: higher values promote diversity, lower values stay closely on topic.",
      "default": 0,
      "minimum": -2,
      "maximum": 2,
      "x-group": "llm",
      "x-step": 0.1
    },
    "short_term_memory_strategy": {
      "title": "Short Term Memory Strategy",
      "type": "string",
      "description": "Strategy for managing short-term memory when context limit is reached. 'trim' removes oldest messages, 'summarize' creates summaries.",
      "default": "trim",
      "enum": [
        "trim",
        "summarize"
      ],
      "x-group": "llm"
    },
    "telegram_entrypoint_enabled": {
      "title": "Enable Telegram Communication",
      "type": "boolean",
      "description": "Allow agent to respond to Telegram messages",
      "default": false,
      "x-group": "entrypoint"
    },
    "telegram_entrypoint_prompt": {
      "title": "Telegram Entry Prompt",
      "type": "string",
      "description": "Extra prompt for telegram entrypoint",
      "maxLength": 10000,
      "x-str-type": "prompt",
      "x-group": "entrypoint"
    },
    "telegram_config": {
      "title": "Telegram Configuration",
      "type": "object",
      "description": "Configure your Telegram integration settings",
      "x-group": "entrypoint",
      "properties": {
        "token": {
          "title": "Bot Token",
          "type": "string",
          "description": "Telegram bot token obtained from BotFather"
        },
        "group_memory_public": {
          "title": "Group Memory Public",
          "type": "boolean",
          "description": "Whether group memory is public"
        },
        "whitelist_chat_ids": {
          "title": "Whitelist Chat IDs",
          "type": "array",
          "description": "List of chat IDs that are allowed to interact with the bot",
          "items": {
            "type": "integer"
          }
        },
        "greeting_group": {
          "title": "Group Greeting",
          "type": "string",
          "description": "Custom greeting message for groups"
        },
        "greeting_user": {
          "title": "User Greeting",
          "type": "string",
          "description": "Custom greeting message for individual users"
        }
      }
    },
    "twitter_entrypoint_enabled": {
      "title": "Enable X Communication",
      "type": "boolean",
      "description": "Agent replies automatically to all X mentions (use cautiously)",
      "default": false,
      "x-group": "deprecated"
    },
    "twitter_entrypoint_prompt": {
      "title": "X Entry Prompt",
      "type": "string",
      "description": "Extra prompt for X entrypoint",
      "maxLength": 10000,
      "x-str-type": "prompt",
      "x-group": "deprecated"
    },
    "twitter_config": {
      "title": "Enter your X API key",
      "type": "object",
      "description": "You must use your own key for X entrypoint, it is separated from X skills",
      "x-group": "deprecated",
      "properties": {
        "consumer_key": {
          "type": "string",
          "title": "X API consumer key",
          "description": "X API consumer key",
          "maxLength": 100
        },
        "consumer_secret": {
          "type": "string",
          "title": "X API consumer secret",
          "description": "X API consumer secret",
          "maxLength": 100
        },
        "access_token": {
          "type": "string",
          "title": "X API access token",
          "description": "X API access token",
          "maxLength": 100
        },
        "access_token_secret": {
          "type": "string",
          "title": "X API access token secret",
          "description": "X API access token secret",
          "maxLength": 100
        }
      }
    },
    "skills": {
      "title": "Skills",
      "type": "object",
      "description": "Dict of skills and their corresponding configurations",
      "x-group": "skills",
      "x-inline": true,
      "properties": {
        "allora": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Allora",
          "description": "Integration with Allora API for blockchain-based price predictions and market forecasting services via Upshot's prediction markets",
          "x-icon": "https://ai.service.crestal.dev/skills/allora/allora.jpeg",
          "x-tags": [
            "Blockchain"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "get_price_prediction": {
                  "type": "string",
                  "title": "Get Price Prediction",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generates 6-hour price forecasts using ensemble ML models analyzing on-chain liquidity and market sentiment",
                  "default": "private",
                  "x-price-level": 4
                }
              },
              "description": "States for each Allora skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Allora API Key",
                "x-link": "[Get your API key](https://docs.allora.network/devs/consumers/allora-api-endpoint#api-authentication)",
                "x-sensitive": true,
                "description": "Allora API key for authentication"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 4
        },
        "cdp": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Coinbase Wallet",
          "description": "Integration with Coinbase Wallet (CDP) providing blockchain wallet functionality including balance checking, token transfers, and cryptocurrency trading operations",
          "x-icon": "https://ai.service.crestal.dev/skills/cdp/cdp.png",
          "x-tags": [
            "Blockchain"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "get_balance": {
                  "type": "string",
                  "title": "CDP Wallet Get Balance",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Use coinbase API to get wallet balance, float result.",
                  "default": "private",
                  "x-price-level": 1
                },
                "swap": {
                  "type": "string",
                  "title": "CDP Wallet Swap",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Use coinbase API to swap.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "WalletActionProvider_get_balance": {
                  "type": "string",
                  "title": "Normal Get Balance",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get balance, raw bigint result. Use this with professional AI models.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "WalletActionProvider_get_wallet_details": {
                  "type": "string",
                  "title": "Get Wallet Details",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get wallet details using coinbase API",
                  "default": "public",
                  "x-price-level": 1
                },
                "CdpApiActionProvider_address_reputation": {
                  "type": "string",
                  "title": "Address Reputation",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for CdpApiActionProvider_address_reputation",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "ERC20ActionProvider_get_balance": {
                  "type": "string",
                  "title": "Erc20 Get Balance",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for ERC20ActionProvider_get_balance",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "ERC20ActionProvider_transfer": {
                  "type": "string",
                  "title": "Erc20 Transfer",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for ERC20ActionProvider_transfer",
                  "default": "private",
                  "x-price-level": 1
                },
                "WethActionProvider_wrap_eth": {
                  "type": "string",
                  "title": "Wrap ETH",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for WethActionProvider_wrap_eth",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "Erc721ActionProvider_get_balance": {
                  "type": "string",
                  "title": "Erc721 NFT Get Balance",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for Erc721ActionProvider_get_balance",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "Erc721ActionProvider_transfer": {
                  "type": "string",
                  "title": "Erc721 NFT Transfer",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for Erc721ActionProvider_transfer",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "Erc721ActionProvider_mint": {
                  "type": "string",
                  "title": "Erc721 Mint",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for Erc721ActionProvider_mint",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "WalletActionProvider_native_transfer": {
                  "type": "string",
                  "title": "Wallet Native Transfer",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for WalletActionProvider_native_transfer",
                  "default": "private",
                  "x-price-level": 1
                },
                "CdpApiActionProvider_request_faucet_funds": {
                  "type": "string",
                  "title": "CDP Request Faucet Funds",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Only available in base-sepolia network",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "MorphoActionProvider_deposit": {
                  "type": "string",
                  "title": "Morpho Deposit",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for MorphoActionProvider_deposit",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "MorphoActionProvider_withdraw": {
                  "type": "string",
                  "title": "Morpho Withdraw",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for MorphoActionProvider_withdraw",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "PythActionProvider_fetch_price_feed_id": {
                  "type": "string",
                  "title": "Pyth Fetch Price Feed Id",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for PythActionProvider_fetch_price_feed_id",
                  "default": "private",
                  "x-price-level": 1
                },
                "PythActionProvider_fetch_price": {
                  "type": "string",
                  "title": "Pyth Fetch Price",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for PythActionProvider_fetch_price",
                  "default": "private",
                  "x-price-level": 1
                },
                "WowActionProvider_buy_token": {
                  "type": "string",
                  "title": "Wow Buy Token",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for WowActionProvider_buy_token",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "WowActionProvider_create_token": {
                  "type": "string",
                  "title": "Wow Create Token",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for WowActionProvider_create_token",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "WowActionProvider_sell_token": {
                  "type": "string",
                  "title": "Wow Sell Token",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for WowActionProvider_sell_token",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "SuperfluidActionProvider_create_flow": {
                  "type": "string",
                  "title": "Superfluid Create Flow",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for SuperfluidActionProvider_create_flow",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "SuperfluidActionProvider_update_flow": {
                  "type": "string",
                  "title": "Superfluid Update Flow",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for SuperfluidActionProvider_update_flow",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "SuperfluidActionProvider_delete_flow": {
                  "type": "string",
                  "title": "Superfluid Delete Flow",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for SuperfluidActionProvider_delete_flow",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "BasenameActionProvider_register_basename": {
                  "type": "string",
                  "title": "Register Basename",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State for BasenameActionProvider_register_basename",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each CDP skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "platform"
              ],
              "x-enum-title": [
                "Nation Hosted"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "dapplooker": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "DappLooker",
          "description": "Retrieve comprehensive market data and analytics for AI agent tokens using DappLooker. This API specializes in AI-focused crypto projects and may not provide data for general cryptocurrencies like BTC or ETH.",
          "x-icon": "https://ai.service.crestal.dev/skills/dapplooker/dapplooker.jpg",
          "x-tags": [
            "Crypto",
            "Market Data",
            "Token Metrics",
            "AI Agents"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "dapplooker_token_data": {
                  "type": "string",
                  "title": "AI Token Data",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve detailed market data and analytics for AI-focused tokens by ticker or address",
                  "default": "private",
                  "x-price-level": 1
                }
              },
              "description": "States for each DappLooker skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "DappLooker API Key",
                "description": "API key for DappLooker service",
                "x-sensitive": true
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "elfa": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Elfa",
          "description": "Integration with Elfa AI API providing data analysis and processing capabilities with secure authentication for advanced data operations",
          "x-icon": "https://ai.service.crestal.dev/skills/elfa/elfa.jpg",
          "x-tags": [
            "Data"
          ],
          "x-nft-requirement": 1,
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "get_mentions": {
                  "type": "string",
                  "title": "Get Mentions",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool uses the Elfa AI API to query hourly-updated tweets from \"smart accounts\" – accounts identified as influential or relevant – that have received at least 10 interactions (comments, retweets, quote tweets).",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_top_mentions": {
                  "type": "string",
                  "title": "Get Top Mentions",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool uses the Elfa API to query tweets mentioning a specific stock ticker. The tweets are ranked by view count, providing insight into the most visible and potentially influential discussions surrounding the stock. The results are updated hourly, allowing for real-time monitoring of market sentiment.",
                  "default": "private",
                  "x-price-level": 1
                },
                "search_mentions": {
                  "type": "string",
                  "title": "Search Mentions",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool uses the Elfa API to search tweets mentioning up to five keywords. It can search within the past 30 days of data, which is updated every 5 minutes, or access up to six months of historical tweet data.",
                  "default": "private",
                  "x-price-level": 1
                },
                "get_trending_tokens": {
                  "type": "string",
                  "title": "Get Trending Tokens",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool ranks the most discussed tokens based on smart mentions count for a given period, with updates every 5 minutes via the Elfa API. Smart mentions provide a more sophisticated measure of discussion volume than simple keyword counts.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_smart_stats": {
                  "type": "string",
                  "title": "Get Smart Stats",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool uses the Elfa API to retrieve key social media metrics for a given username. These metrics include Smart Following Count, Engagement Score, and Engagement Ratio.",
                  "default": "private",
                  "x-price-level": 1
                }
              },
              "description": "States for each Elfa skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Elfa API Key",
                "x-sensitive": true,
                "description": "Elfa API key for authentication"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "openai": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "OpenAI",
          "description": "Skills for interacting with OpenAI services, including image generation, image-to-text conversion, and other AI capabilities",
          "x-icon": "https://ai.service.crestal.dev/skills/openai/openai.png",
          "x-tags": [
            "AI",
            "Image Generation",
            "Image Analysis"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "image_to_text": {
                  "type": "string",
                  "title": "Image to Text",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Convert images to detailed text descriptions using OpenAI's GPT-4o model",
                  "default": "private",
                  "x-price-level": 4
                },
                "dalle_image_generation": {
                  "type": "string",
                  "title": "Image Generation by DALL-E",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using OpenAI's DALL-E model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 4
                },
                "gpt_image_generation": {
                  "type": "string",
                  "title": "Image Generation by GPT",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using OpenAI's GPT-Image-1 model based on text prompts",
                  "default": "private",
                  "x-price-level": 5
                },
                "gpt_image_to_image": {
                  "type": "string",
                  "title": "Image Editing by GPT",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Edit images using OpenAI's GPT-Image-1 model based on text prompts",
                  "default": "private",
                  "x-price-level": 5
                }
              },
              "description": "States for each OpenAI skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "API Key",
                "x-link": "[Get your API key](https://platform.openai.com/)",
                "x-sensitive": true,
                "description": "OpenAI API key for authentication"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 4
        },
        "portfolio": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Blockchain Portfolio",
          "description": "Access blockchain wallet data and analytics through Moralis APIs for portfolio tracking, token balances, and investment performance",
          "x-icon": "https://ai.service.crestal.dev/skills/portfolio/moralis.png",
          "x-tags": [
            "Blockchain",
            "Web3",
            "Crypto",
            "Portfolio",
            "Wallet"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "wallet_history": {
                  "type": "string",
                  "title": "Wallet Transaction History",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve the full transaction history of a specified wallet address",
                  "default": "private",
                  "x-price-level": 1
                },
                "token_balances": {
                  "type": "string",
                  "title": "Token Balances",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get token balances for a specific wallet address and their token prices in USD",
                  "default": "private",
                  "x-price-level": 1
                },
                "wallet_approvals": {
                  "type": "string",
                  "title": "Wallet Approvals",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve active ERC20 token approvals for a specified wallet address",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "wallet_swaps": {
                  "type": "string",
                  "title": "Wallet Swaps",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get all swap-related transactions (buy, sell) for a wallet address",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "wallet_net_worth": {
                  "type": "string",
                  "title": "Wallet Net Worth",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get the net worth of a wallet in USD across multiple chains",
                  "default": "private",
                  "x-price-level": 1
                },
                "wallet_profitability_summary": {
                  "type": "string",
                  "title": "Wallet Profitability Summary",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve a summary of wallet profitability",
                  "default": "private",
                  "x-price-level": 1
                },
                "wallet_profitability": {
                  "type": "string",
                  "title": "Wallet Profitability Breakdown",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve detailed profitability breakdown for a wallet",
                  "default": "private",
                  "x-price-level": 1
                },
                "wallet_stats": {
                  "type": "string",
                  "title": "Wallet Stats",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get statistical information about a wallet",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "wallet_defi_positions": {
                  "type": "string",
                  "title": "Wallet DeFi Positions",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get the positions summary of a wallet address",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "wallet_nfts": {
                  "type": "string",
                  "title": "Wallet NFTs",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get NFTs owned by a given wallet address",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each portfolio blockchain analysis skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Moralis API Key",
                "description": "API key for Moralis API service",
                "x-link": "[Get your API key](https://moralis.io/)",
                "x-sensitive": true
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "tavily": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Tavily",
          "description": "Web search and content extraction capabilities using Tavily",
          "x-icon": "https://ai.service.crestal.dev/skills/tavily/tavily.jpg",
          "x-tags": [
            "Internet",
            "Search",
            "Information",
            "Content Extraction"
          ],
          "x-nft-requirement": 1,
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "tavily_search": {
                  "type": "string",
                  "title": "Tavily Search",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Search the web for real-time information and recent content using Tavily",
                  "default": "private",
                  "x-price-level": 1
                },
                "tavily_extract": {
                  "type": "string",
                  "title": "Tavily Extract",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Extract full content from web pages using Tavily Extract API",
                  "default": "private",
                  "x-price-level": 1
                }
              },
              "description": "States for each Tavily skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Tavily API Key",
                "description": "API key for Tavily services",
                "x-link": "[Get your API key](https://tavily.com/)",
                "x-sensitive": true
              },
              "rate_limit_number": {
                "type": "integer",
                "title": "Rate Limit Number",
                "description": "Number of requests allowed per time window, only valid if api_key is set"
              },
              "rate_limit_minutes": {
                "type": "integer",
                "title": "Rate Limit Minutes",
                "description": "Time window in minutes for rate limiting, only valid if api_key is set"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "token": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Token Operations",
          "description": "Token analysis skills powered by Moralis API",
          "type": "object",
          "x-icon": "https://ai.service.crestal.dev/skills/portfolio/moralis.png",
          "x-tags": [
            "Blockchain",
            "Web3",
            "Crypto",
            "Token",
            "DeFi"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "token_price": {
                  "type": "string",
                  "title": "ERC20 Token Price",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get the token price denominated in the blockchain's native token and USD",
                  "default": "public",
                  "x-price-level": 1
                },
                "token_erc20_transfers": {
                  "type": "string",
                  "title": "ERC20 Token Transfers",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get ERC20 token transactions ordered by block number",
                  "default": "public",
                  "x-price-level": 1
                },
                "token_search": {
                  "type": "string",
                  "title": "Token Search (Premium)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Search for tokens based on contract address, token name or token symbol. Premium endpoint available as an add-on. Requires a Moralis Business plan or Enterprise plan.",
                  "default": "public",
                  "x-price-level": 1
                },
                "token_analytics": {
                  "type": "string",
                  "title": "Token Analytics",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Get analytics for a token by token address",
                  "default": "public",
                  "x-price-level": 1
                }
              },
              "description": "States for each token analysis skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Moralis API Key",
                "description": "API key for Moralis API service",
                "x-link": "[Get your API key](https://moralis.io/)",
                "x-sensitive": true
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "twitter": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "X",
          "description": "Integration with X API enabling social media interactions including retrieving posts, mentions, user information, and posting content with media support",
          "x-icon": "https://ai.service.crestal.dev/skills/twitter/twitter.png",
          "x-tags": [
            "Social"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "get_mentions": {
                  "type": "string",
                  "title": "Get Mentions",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieves posts that mention the authenticated user from the past 24 hours.",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "post_tweet": {
                  "type": "string",
                  "title": "Create a Post",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Publishes posts with media attachments, and content moderation checks",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "reply_tweet": {
                  "type": "string",
                  "title": "Reply to a Post",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Constructs contextual replies to posts with mention handling and conversation threading",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "get_timeline": {
                  "type": "string",
                  "title": "Get Timeline",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches user's home timeline with recent posts.",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "follow_user": {
                  "type": "string",
                  "title": "Follow User",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Initiates following of X accounts with rate limit handling and anti-spam safeguards",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "like_tweet": {
                  "type": "string",
                  "title": "Like a Post",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Likes a post",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "retweet": {
                  "type": "string",
                  "title": "Repost a Post",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Shares posts with attribution tracking and duplicate prevention mechanisms",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "search_tweets": {
                  "type": "string",
                  "title": "Search Posts",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Executes advanced X searches with keyword filters, date ranges, and engagement thresholds",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "get_user_by_username": {
                  "type": "string",
                  "title": "Get User by Username",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieves user information by username.",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "get_user_tweets": {
                  "type": "string",
                  "title": "Get User Tweets",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieves tweets from a specific user by their user ID.",
                  "default": "disabled",
                  "x-price-level": 2
                }
              },
              "description": "States for each X skill"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "consumer_key": {
                "type": "string",
                "title": "X API consumer key",
                "description": "X API consumer key",
                "x-link": "[Get your API key](https://developer.x.com/)",
                "x-sensitive": true,
                "maxLength": 100
              },
              "consumer_secret": {
                "type": "string",
                "title": "X API consumer secret",
                "description": "X API consumer secret",
                "x-sensitive": true,
                "maxLength": 100
              },
              "access_token": {
                "type": "string",
                "title": "X API access token",
                "description": "X API access token",
                "x-sensitive": true,
                "maxLength": 100
              },
              "access_token_secret": {
                "type": "string",
                "title": "X API access token secret",
                "description": "X API access token secret",
                "x-sensitive": true,
                "maxLength": 100
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "consumer_key",
                "consumer_secret",
                "access_token",
                "access_token_secret"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 2
        },
        "chainlist": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Chainlist RPC Endpoints",
          "description": "Access blockchain RPC endpoints and network information from chainlist.org. Enable this skill to look up EVM-compatible networks by name, symbol, or chain ID and get their RPC endpoints, native currencies, and explorer links.",
          "x-icon": "https://ai.service.crestal.dev/skills/chainlist/chainlist.png",
          "x-tags": [
            "Blockchain",
            "RPC",
            "EVM",
            "Network"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "chain_lookup": {
                  "type": "string",
                  "title": "Chain Lookup",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Enables looking up blockchain RPC endpoints and network information. When public, available to all users; when private, only to authenticated users.",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "Configure visibility for chainlist skills (disabled: unavailable, public: available to all, private: available only to authenticated users)"
            }
          },
          "required": [
            "enabled",
            "states"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "dexscreener": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "DEX Screener",
          "description": "Integration with DexScreener API, enabling crypto token pair information",
          "type": "object",
          "x-icon": "https://ai.service.crestal.dev/skills/dexscreener/dexscreener.png",
          "x-tags": [
            "Crypto",
            "Market Data",
            "Finance",
            "Blockchain"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Enable or disable the Dexscreener skill.",
              "default": false
            },
            "states": {
              "type": "object",
              "title": "Skill States",
              "description": "Enable/disable specific tools. Only enable one if you want a consistent characteristic for your agent",
              "properties": {
                "search_token": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Searches on DexScreener for token pairs matching a query (symbol, name, address). Returns up to 50 pairs sorted by 'liquidity' or 'volume24h' (required input), including price, volume, etc. Use this tool to find token information based on user queries.",
                  "default": "disabled",
                  "x-price-level": 1
                }
              }
            }
          },
          "required": [
            "enabled",
            "states"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "heurist": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Heurist",
          "description": "Skills for interacting with Heurist AI services, including image generation and other AI capabilities",
          "x-icon": "https://ai.service.crestal.dev/skills/heurist/heurist.png",
          "x-tags": [
            "AI",
            "Image Generation"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "image_generation_animagine_xl": {
                  "type": "string",
                  "title": "Japanese Anime Image Generation",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate Japanese anime-style images using Heurist's AnimagineXL model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_arthemy_comics": {
                  "type": "string",
                  "title": "Comic Style Image Generation",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate comic-style images using Heurist's ArthemyComics model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_arthemy_real": {
                  "type": "string",
                  "title": "Realistic Image Generation",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate realistic images using Heurist's ArthemyReal model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_braindance": {
                  "type": "string",
                  "title": "Artistic Image Generation",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate artistic images using Heurist's BrainDance model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_cyber_realistic_xl": {
                  "type": "string",
                  "title": "Cyberpunk Hyperrealistic Image Generation",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate hyperrealistic photographs with a cyberpunk aesthetic using Heurist's CyberRealisticXL model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_flux_1_dev": {
                  "type": "string",
                  "title": "Versatile Image Generation (Flux)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate versatile images in any style using Heurist's Flux.1-dev model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_sdxl": {
                  "type": "string",
                  "title": "High-Quality Image Generation (SDXL)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate high-quality images in any style using Heurist's SDXL model based on text prompts",
                  "default": "disabled",
                  "x-price-level": 2
                }
              },
              "description": "States for each Heurist AI skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Heurist API Key",
                "x-link": "[Get your API key](https://dev-api-form.heurist.ai/)",
                "x-sensitive": true,
                "description": "API key for Heurist AI services, if you have one, you can set the rate limit for your user"
              },
              "rate_limit_number": {
                "type": "integer",
                "title": "Rate Limit Number",
                "description": "Number of requests allowed per time window, only valid if api_key is set"
              },
              "rate_limit_minutes": {
                "type": "integer",
                "title": "Rate Limit Minutes",
                "description": "Time window in minutes for rate limiting, only valid if api_key is set"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 2
        },
        "defillama": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Defillama",
          "x-icon": "https://ai.service.crestal.dev/skills/defillama/defillama.jpeg",
          "description": "Integration with DeFi Llama API providing comprehensive decentralized finance data including token prices, protocol TVL, DEX volumes, and stablecoin metrics",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "fetch_batch_historical_prices": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch batch historical prices",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_block": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch block",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_current_prices": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch current prices",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_first_price": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieves inaugural trading price data for assets with historical context",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_historical_prices": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch historical prices",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_price_chart": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch price chart",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_price_percentage": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch price percentage",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_fees_overview": {
                  "type": "string",
                  "title": "Fetch Fees Overview",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Provides aggregated fee statistics across DEXs, lending protocols, and other fee-generating DeFi primitives",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_stablecoin_chains": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Shows blockchain distribution of stablecoin supply with chain-specific circulation metrics",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_stablecoin_charts": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generates historical charts for stablecoin market cap, supply changes, and chain dominance",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_stablecoin_prices": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch stablecoin prices",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_stablecoins": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch stablecoins",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_chain_historical_tvl": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieves historical TVL data for specific blockchain chains with daily granularity",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_chains": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch chains",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_historical_tvl": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Provides historical TVL trends for the entire DeFi ecosystem or specific protocol categories",
                  "default": "disabled"
                },
                "fetch_protocol": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch protocol",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_protocol_current_tvl": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch protocol current TVL",
                  "default": "disabled"
                },
                "fetch_protocols": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieves comprehensive list of all tracked DeFi protocols with their category, chain, and TVL data",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_dex_overview": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Provides aggregated DEX metrics including total volume, top trading pairs, and liquidity distribution",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_dex_summary": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch dex summary",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_options_overview": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch options overview",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_pool_chart": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch pool chart",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_pools": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch pools",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each Defillama skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "platform"
              ],
              "x-enum-title": [
                "Nation Hosted"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "x-avg-price-level": 1
        },
        "enso": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Enso",
          "description": "Integration with Enso Finance API providing DeFi trading and portfolio management capabilities across multiple blockchain networks",
          "x-icon": "https://ai.service.crestal.dev/skills/enso/enso.jpg",
          "x-tags": [
            "Blockchain"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "get_networks": {
                  "type": "string",
                  "title": "Get Networks",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve networks supported by the Enso API",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_tokens": {
                  "type": "string",
                  "title": "Get Tokens",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Enso Finance Token Information Tool: Retrieves detailed token information from the Enso Finance API, including APY, symbol, address, protocol slug, token type, and underlying tokens.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_prices": {
                  "type": "string",
                  "title": "Get Prices",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve the price of a token by chain ID and contract address",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_wallet_approvals": {
                  "type": "string",
                  "title": "Get Wallet Approvals",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve token spend approvals for a wallet on a specified blockchain network.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_wallet_balances": {
                  "type": "string",
                  "title": "Get Wallet Balances",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve token balances of a wallet on a specified blockchain network.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "wallet_approve": {
                  "type": "string",
                  "title": "Wallet Approve",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool is used specifically for broadcasting a ERC20 token spending approval transaction to the network. It should only be used when the user explicitly requests to broadcast an approval transaction with a specific amount for a certain token.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "route_shortcut": {
                  "type": "string",
                  "title": "Route Shortcut",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool is used specifically for broadcasting a route transaction calldata to the network. It should only be used when the user explicitly requests to broadcast a route transaction with routeId.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_best_yield": {
                  "type": "string",
                  "title": "Get Best Yield",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Find the best yield options for a specific token (default: USDC) across all protocols on a blockchain network (default: Base). Results are sorted by APY in descending order.",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each Enso skill (disabled, public, or private)"
            },
            "main_tokens": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of main tokens to use",
              "default": [
                "ETH",
                "UDSC",
                "USDT"
              ]
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "main_tokens",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_token": {
                "type": "string",
                "title": "API Token",
                "description": "Enso API token for authentication"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_token"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "common": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Common",
          "description": "Utility skills",
          "x-icon": "https://ai.service.crestal.dev/skills/common/common.jpg",
          "x-tags": [
            "Utility"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": true
            },
            "states": {
              "type": "object",
              "properties": {
                "current_time": {
                  "type": "string",
                  "title": "Current Time",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Provides localized timekeeping with automatic timezone detection using IP geolocation",
                  "default": "private",
                  "x-price-level": 1
                }
              },
              "description": "States for each common utility skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "platform"
              ],
              "x-enum-title": [
                "Nation Hosted"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "github": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "GitHub",
          "description": "Search capabilities for GitHub repositories, users, and code",
          "x-icon": "https://ai.service.crestal.dev/skills/github/github.jpg",
          "x-tags": [
            "GitHub",
            "Search",
            "Code"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "github_search": {
                  "type": "string",
                  "title": "GitHub Search",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Search GitHub for repositories, users, and code",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each GitHub search skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "platform"
              ],
              "x-enum-title": [
                "Nation Hosted"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "moralis": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Moralis",
          "x-icon": "https://ai.service.crestal.dev/skills/moralis/moralis.png",
          "description": "Comprehensive blockchain data access via Moralis API providing wallet portfolio information, NFT data, and transaction details across multiple EVM chains and Solana networks",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "title": "Skill States",
              "description": "States for each skill (disabled, public, or private)",
              "properties": {
                "fetch_wallet_portfolio": {
                  "type": "string",
                  "title": "Fetch Wallet Portfolio",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches a complete wallet portfolio across all chains (EVM + Solana), retrieving detailed information about a wallet's holdings, token balances, USD values, and total portfolio value.",
                  "x-price-level": 1
                },
                "fetch_chain_portfolio": {
                  "type": "string",
                  "title": "Fetch Chain Portfolio",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches wallet portfolio for a specific blockchain, retrieving detailed information about a wallet's holdings, token balances, USD values, and optionally token approvals.",
                  "x-price-level": 1
                },
                "fetch_nft_portfolio": {
                  "type": "string",
                  "title": "Fetch NFT Portfolio",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches NFT portfolio for a wallet, retrieving detailed information about NFTs owned by a wallet address, including metadata, media URLs, and floor prices when available.",
                  "x-price-level": 1
                },
                "fetch_solana_portfolio": {
                  "type": "string",
                  "title": "Fetch Solana Portfolio",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches Solana wallet portfolio, retrieving detailed information about a Solana wallet's holdings, including native SOL, SPL tokens, and optionally NFTs.",
                  "x-price-level": 1
                }
              },
              "required": [
                "fetch_wallet_portfolio",
                "fetch_chain_portfolio",
                "fetch_nft_portfolio",
                "fetch_solana_portfolio"
              ]
            },
            "supported_chains": {
              "type": "object",
              "title": "Supported Blockchain Networks",
              "description": "Configure which blockchain networks are supported",
              "properties": {
                "evm": {
                  "type": "boolean",
                  "title": "EVM Chains",
                  "description": "Whether to support EVM-compatible chains (Ethereum, Binance Smart Chain, etc.)",
                  "default": true
                },
                "solana": {
                  "type": "boolean",
                  "title": "Solana",
                  "description": "Whether to support Solana blockchain",
                  "default": true
                }
              }
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "platform",
                "agent_owner"
              ],
              "x-enum-title": [
                "Nation Hosted",
                "Owner Provided"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "API Key",
                "x-link": "[Get your API key](https://developers.moralis.com/)",
                "x-sensitive": true,
                "description": "Moralis API key for blockchain data access"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "system": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "System",
          "description": "System management and configuration skills for agent operations including API key management",
          "x-icon": "https://ai.service.crestal.dev/skills/system/system.svg",
          "x-tags": [
            "System",
            "Management",
            "Configuration"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "read_agent_api_key": {
                  "type": "string",
                  "title": "Read Agent API Key",
                  "enum": [
                    "disabled",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve the API key for the agent. If no API key exists, generates and sets a new one.",
                  "default": "private",
                  "x-price-level": 1
                },
                "regenerate_agent_api_key": {
                  "type": "string",
                  "title": "Regenerate Agent API Key",
                  "enum": [
                    "disabled",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner Only"
                  ],
                  "description": "Generate a new API key for the agent, replacing any existing key.",
                  "default": "private",
                  "x-price-level": 1
                }
              }
            }
          },
          "x-avg-price-level": 1
        },
        "http": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "HTTP Client",
          "description": "HTTP client skills for making web requests",
          "x-icon": "https://ai.service.crestal.dev/skills/http/http.svg",
          "x-tags": [
            "HTTP",
            "Web",
            "API",
            "Client"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "http_get": {
                  "type": "string",
                  "title": "HTTP GET",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Make HTTP GET requests to fetch data from web APIs and websites",
                  "default": "private",
                  "x-price-level": 1
                },
                "http_post": {
                  "type": "string",
                  "title": "HTTP POST",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Make HTTP POST requests to send data to web APIs and submit forms",
                  "default": "private",
                  "x-price-level": 1
                },
                "http_put": {
                  "type": "string",
                  "title": "HTTP PUT",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Make HTTP PUT requests to update or replace data on web APIs",
                  "default": "private",
                  "x-price-level": 1
                }
              },
              "description": "States for each HTTP client skill (disabled, public, or private)"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "web_scraper": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Web Scraper & Content Indexing",
          "description": "Scrape web content and index it for intelligent querying and retrieval",
          "x-icon": "https://ai.service.crestal.dev/skills/web_scraper/langchain.png",
          "x-tags": [
            "Web Scraping",
            "Content Indexing",
            "Vector Search",
            "LangChain",
            "Document Retrieval"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "scrape_and_index": {
                  "type": "string",
                  "title": "Scrape & Index Content",
                  "enum": [
                    "disabled",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner Only"
                  ],
                  "description": "Scrape content from web URLs and index it into a searchable vector store for later retrieval. Supports multiple URLs, customizable chunking, and persistent storage.",
                  "default": "private",
                  "x-price-level": 3
                },
                "query_indexed_content": {
                  "type": "string",
                  "title": "Query Indexed Content",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Search and retrieve relevant information from previously indexed web content using semantic similarity. Perfect for answering questions based on scraped documents.",
                  "default": "private",
                  "x-price-level": 1
                },
                "website_indexer": {
                  "type": "string",
                  "title": "Complete Website Indexer",
                  "enum": [
                    "disabled",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner Only"
                  ],
                  "description": "Index entire websites by discovering and scraping all pages using sitemaps. Automatically finds sitemaps from robots.txt, extracts all URLs, and comprehensively indexes website content.",
                  "default": "private",
                  "x-price-level": 4
                },
                "document_indexer": {
                  "type": "string",
                  "title": "Document Content Indexer",
                  "enum": [
                    "disabled",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner Only"
                  ],
                  "description": "Import and index document content directly to the vector database. Perfect for adding content from Google Docs, Notion pages, PDFs, or any other document sources by copy-pasting.",
                  "default": "private",
                  "x-price-level": 4
                }
              },
              "description": "Configure the availability of each web scraper skill (disabled, public, or private)"
            },
            "max_urls_per_request": {
              "type": "integer",
              "title": "Max URLs per Request",
              "description": "Maximum number of URLs that can be scraped in a single request",
              "default": 10,
              "minimum": 1,
              "maximum": 20
            },
            "default_chunk_size": {
              "type": "integer",
              "title": "Default Chunk Size",
              "description": "Default size of text chunks for document indexing (characters)",
              "default": 1000,
              "minimum": 100,
              "maximum": 4000
            },
            "default_chunk_overlap": {
              "type": "integer",
              "title": "Default Chunk Overlap",
              "description": "Default overlap between chunks to maintain context (characters)",
              "default": 200,
              "minimum": 0,
              "maximum": 1000
            },
            "requests_per_second": {
              "type": "number",
              "title": "Requests per Second",
              "description": "Rate limit for web scraping to be respectful to target servers",
              "default": 2,
              "minimum": 0.1,
              "maximum": 10
            },
            "request_timeout": {
              "type": "integer",
              "title": "Request Timeout",
              "description": "Timeout for web requests in seconds",
              "default": 30,
              "minimum": 5,
              "maximum": 120
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key for embeddings",
              "enum": [
                "platform"
              ],
              "x-enum-title": [
                "Platform Hosted"
              ],
              "default": "platform"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 3
        },
        "firecrawl": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Firecrawl Web Scraping",
          "description": "AI-powered web scraping and crawling capabilities using Firecrawl",
          "x-icon": "https://ai.service.crestal.dev/skills/firecrawl/firecrawl.png",
          "x-tags": [
            "Web Scraping",
            "Crawling",
            "Content Extraction",
            "Data Mining",
            "Website Analysis"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "firecrawl_scrape": {
                  "type": "string",
                  "title": "Firecrawl Scrape",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Scrape single web pages and extract content in various formats (markdown, HTML, JSON, etc.). Handles JavaScript-rendered content, PDFs, and dynamic websites.",
                  "default": "private",
                  "x-price-level": 3
                },
                "firecrawl_crawl": {
                  "type": "string",
                  "title": "Firecrawl Crawl",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Crawl entire websites and extract content from multiple pages. Can follow links, handle JavaScript-rendered content, and extract structured data from entire websites.",
                  "default": "private",
                  "x-price-level": 3
                },
                "firecrawl_query_indexed_content": {
                  "type": "string",
                  "title": "Query Indexed Content",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Query previously indexed Firecrawl content to find relevant information and answer questions. Use this to search through content that was scraped and indexed using Firecrawl tools.",
                  "default": "private",
                  "x-price-level": 1
                },
                "firecrawl_clear_indexed_content": {
                  "type": "string",
                  "title": "Clear Indexed Content",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Clear all previously indexed Firecrawl content from the vector store. This will permanently delete all indexed content and cannot be undone. Use this tool when you want to start fresh with new content.",
                  "default": "private",
                  "x-price-level": 1
                }
              },
              "description": "States for each Firecrawl skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            },
            "api_key": {
              "type": "string",
              "title": "Firecrawl API Key",
              "description": "API key for Firecrawl services",
              "x-link": "[Get your API key](https://firecrawl.dev/)",
              "x-sensitive": true
            },
            "rate_limit_number": {
              "type": "integer",
              "title": "Rate Limit Number",
              "description": "Number of requests allowed per time window",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            },
            "rate_limit_minutes": {
              "type": "integer",
              "title": "Rate Limit Minutes",
              "description": "Time window in minutes for rate limiting",
              "minimum": 1,
              "maximum": 1440,
              "default": 60
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 2
        },
        "aixbt": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "AIXBT",
          "description": "Cryptocurrency project data and analytics through the AIXBT API",
          "x-icon": "https://ai.service.crestal.dev/skills/aixbt/aixbt.jpg",
          "x-tags": [
            "Cryptocurrency",
            "Research",
            "Analytics"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "aixbt_projects": {
                  "type": "string",
                  "title": "AIXBT Projects",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Search for cryptocurrency projects and retrieve detailed information using AIXBT",
                  "default": "disabled",
                  "x-price-level": 3
                }
              },
              "description": "States for each AIXBT API skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for AIXBT API service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "AIXBT API Key",
                "description": "API key for AIXBT API service",
                "x-link": "[Get your API key](https://aixbt.tech/)",
                "x-sensitive": true
              },
              "rate_limit_number": {
                "type": "integer",
                "title": "Rate Limit Number",
                "description": "Number of requests allowed per time window, only valid if api_key is set"
              },
              "rate_limit_minutes": {
                "type": "integer",
                "title": "Rate Limit Minutes",
                "description": "Time window in minutes for rate limiting, only valid if api_key is set"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 3
        },
        "cookiefun": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "cookie.fun",
          "description": "Access Twitter/X analytics and insights using CookieFun API. Get data about accounts, tweets, followers, and trends across different industry sectors.",
          "x-icon": "https://ai.service.crestal.dev/skills/cookiefun/cookiefun.png",
          "x-tags": [
            "Twitter",
            "Social Media",
            "Analytics",
            "X"
          ],
          "x-nft-requirement": 10,
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Toggle to enable or disable all CookieFun skills",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "get_sectors": {
                  "type": "string",
                  "title": "Get Sectors",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Retrieve a list of all available industry sectors in CookieFun, useful for exploring trending topics and categorization",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "get_account_details": {
                  "type": "string",
                  "title": "Get Account Details",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch comprehensive metrics about any Twitter account including followers, engagement rates, impressions, and other analytics",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "get_account_smart_followers": {
                  "type": "string",
                  "title": "Get Account Smart Followers",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Identify the most valuable followers of any Twitter account based on influence, engagement, and reach metrics",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "search_accounts": {
                  "type": "string",
                  "title": "Search Accounts",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Find Twitter accounts posting about specific topics with filtering by engagement, impressions, and tweet types",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "get_account_feed": {
                  "type": "string",
                  "title": "Get Account Feed",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Access a Twitter account's feed with powerful filtering by date range, media content, tweet type, and sorting options",
                  "default": "disabled",
                  "x-price-level": 2
                }
              },
              "description": "Configure access levels for each CookieFun skill - disabled, available to all users, or restricted to agent owner only"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Choose whether to use a platform-provided API key or provide your own CookieFun API key",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "CookieFun API Key",
                "description": "Your personal CookieFun API key, required when using Owner Provided option (sign up at cookie.fun)",
                "x-sensitive": true,
                "x-link": "[Get your API key](https://cookie.fun/)"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 2
        },
        "cryptocompare": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Cryptocompare",
          "description": "Integration with CryptoCompare API providing cryptocurrency market data, price information, and crypto news with rate limiting capabilities",
          "x-icon": "https://ai.service.crestal.dev/skills/cryptocompare/cryptocompare.png",
          "x-tags": [
            "Blockchain",
            "Finance"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "fetch_news": {
                  "type": "string",
                  "title": "Fetch News",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "This tool fetches the latest cryptocurrency news articles for a specific token.\nYou can optionally specify a timestamp to get historical news, otherwise it uses the current time.\nReturns articles in English with details like title, body, source, and publish time.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_price": {
                  "type": "string",
                  "title": "Fetch Price",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Provides real-time cryptocurrency pricing with multi-exchange aggregation and historical comparisons",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_trading_signals": {
                  "type": "string",
                  "title": "Fetch Trading Signals",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generates technical analysis signals using indicators like RSI, MACD, and Bollinger Bands",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_top_market_cap": {
                  "type": "string",
                  "title": "Fetch Top Market Cap",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Tracks top cryptocurrencies by market capitalization with sector breakdowns",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_top_exchanges": {
                  "type": "string",
                  "title": "Fetch Top Exchanges",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Ranks cryptocurrency exchanges by liquidity and trading volume with market pair analysis",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_top_volume": {
                  "type": "string",
                  "title": "Fetch Top Volume",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Analyzes 24h trading volume trends across exchanges and currency pairs",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each CryptoCompare skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for AIXBT API service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "CryptoCompare API Key",
                "x-link": "[Get your API key](https://www.cryptocompare.com/cryptopian/api-keys)",
                "x-sensitive": true,
                "description": "CryptoCompare API key for authentication"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "cryptopanic": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "CryptoPanic",
          "description": "CryptoPanic is a news aggregator platform indicating impact on price and market for traders and cryptocurrency enthusiasts.",
          "x-icon": "https://ai.service.crestal.dev/skills/cryptopanic/cryptopanic.png",
          "x-tags": [
            "Data"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "fetch_crypto_sentiment": {
                  "type": "string",
                  "title": "Fetch Crypto Sentiment",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "default": "disabled",
                  "description": "Fetches recent CryptoPanic posts and defines market sentiment via LLM analysis.",
                  "x-price-level": 1
                },
                "fetch_crypto_news": {
                  "type": "string",
                  "title": "Fetch Crypto News",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "default": "disabled",
                  "description": "Fetches latest crypto market news from CryptoPanic across all filters.",
                  "x-price-level": 1
                }
              },
              "description": "States for each CryptoPanic skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for AIXBT API service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "CryptoPanic API Key",
                "x-link": "[Get your API key](https://cryptopanic.com/developers/api/keys)",
                "x-sensitive": true,
                "description": "API key for accessing CryptoPanic API"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "dune_analytics": {
          "title": "Dune Analytics",
          "description": "Dune Analytics skills to fetch data from Dune Analytics API.",
          "x-icon": "https://ai.service.crestal.dev/skills/dune_analytics/dune.png",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "title": "Skill States",
              "type": "object",
              "properties": {
                "fetch_nation_metrics": {
                  "type": "string",
                  "title": "Fetch Crestal Nation Metrics",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches Crestal Nation metrics (e.g., total_users, agents/citizens, market_cap) from Dune Analytics API.",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "fetch_kol_buys": {
                  "type": "string",
                  "title": "Fetch KOL Memecoin Buys",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetches a list of KOL memecoin buy transactions on Solana from Dune Analytics API.",
                  "default": "disabled",
                  "x-price-level": 1
                }
              }
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for Dune service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Dune API Key",
                "description": "API key for Dune Analytics (X-Dune-API-Key).",
                "x-link": "[Get your API key](https://docs.dune.com/api-reference/overview/authentication)",
                "x-sensitive": true
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "slack": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Slack",
          "description": "Integration with Slack API enabling workspace communication including channel management, message retrieval, and posting capabilities for team collaboration",
          "x-icon": "https://ai.service.crestal.dev/skills/slack/slack.jpg",
          "x-tags": [
            "Social"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "get_channel": {
                  "type": "string",
                  "title": "Get Channel",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State of the get_channel skill",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "get_message": {
                  "type": "string",
                  "title": "Get Message",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State of the get_message skill",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "schedule_message": {
                  "type": "string",
                  "title": "Schedule Message",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State of the schedule_message skill",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "send_message": {
                  "type": "string",
                  "title": "Send Message",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "State of the send_message skill",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each Slack skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for AIXBT API service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "slack_bot_token": {
                "type": "string",
                "title": "Slack Bot Token",
                "x-link": "[Get your API key](https://api.slack.com/)",
                "x-sensitive": true,
                "description": "Slack bot token for API access"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "slack_bot_token"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "supabase": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Supabase",
          "description": "Integration with Supabase backend-as-a-service platform enabling database operations and Edge Function invocations",
          "x-icon": "https://ai.service.crestal.dev/skills/supabase/supabase.svg",
          "x-tags": [
            "Database",
            "Backend"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "fetch_data": {
                  "type": "string",
                  "title": "Fetch Data",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Fetch data from Supabase tables with filtering, ordering, and pagination support",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "insert_data": {
                  "type": "string",
                  "title": "Insert Data",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Insert new records into Supabase tables",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "update_data": {
                  "type": "string",
                  "title": "Update Data",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Update existing records in Supabase tables based on filter conditions",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "upsert_data": {
                  "type": "string",
                  "title": "Upsert Data",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Insert or update records in Supabase tables based on conflict resolution",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "delete_data": {
                  "type": "string",
                  "title": "Delete Data",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Delete records from Supabase tables based on filter conditions",
                  "default": "disabled",
                  "x-price-level": 1
                },
                "invoke_function": {
                  "type": "string",
                  "title": "Invoke Edge Function",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Invoke Supabase Edge Functions with optional parameters and headers",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each Supabase skill"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Who provides the API key",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            },
            "supabase_url": {
              "type": "string",
              "title": "Supabase URL",
              "description": "Your Supabase project URL (e.g., https://your-project.supabase.co). You can find it in Project Settings -\u003E Data API",
              "x-link": "[Create Your DB](https://supabase.com/)",
              "format": "uri"
            },
            "supabase_key": {
              "type": "string",
              "title": "Supabase API Key",
              "description": "Your Supabase project's API key. You can find it in Project Settings -\u003E API Keys",
              "x-sensitive": true,
              "format": "password"
            },
            "public_key": {
              "type": "string",
              "title": "Public API Key",
              "description": "You can add a key with more restrictive permissions for public skills. If not provided, supabase_key will be used.",
              "x-sensitive": true,
              "format": "password"
            },
            "public_write_tables": {
              "type": "string",
              "title": "Public Write Tables",
              "description": "Add tables separated by commas. When insert, update, upsert, or delete operations are enabled for public use, only tables from this list can be used. This list does not restrict the skills executed by the owner or in autonomous chat. You can use either this option or public_key to secure your public access."
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "enabled": {
                "const": true
              }
            }
          },
          "then": {
            "required": [
              "supabase_url",
              "supabase_key"
            ]
          },
          "x-avg-price-level": 1
        },
        "venice_image": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "Venice Image",
          "description": "Skills for generating images using the Venice AI API.",
          "x-icon": "https://ai.service.crestal.dev/skills/venice_image/venice_image.jpg",
          "x-tags": [
            "AI",
            "Image Generation"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill category is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "title": "Skill States",
              "description": "States for each Venice Image skill (disabled, public, or private)",
              "properties": {
                "image_vision": {
                  "type": "string",
                  "title": "Image Vision",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Describes an image provided via URL using the Venice AI API. Ideal for understanding the content of an existing image",
                  "default": "public"
                },
                "image_enchance": {
                  "type": "string",
                  "title": "Image Enchance",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Tool for **Enchance** (modifying specific areas of) an existing image using a selected image model via Venice AI",
                  "default": "public"
                },
                "image_upscale": {
                  "type": "string",
                  "title": "Image Upscale",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Upscale an existing image by 2x or 4x using Venice AI.",
                  "default": "disabled"
                },
                "image_generation_flux_dev": {
                  "type": "string",
                  "title": "Image Generation (Flux-Dev)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using Venice AI's Flux Dev model (research, art workflows).",
                  "default": "public",
                  "x-price-level": 2
                },
                "image_generation_flux_dev_uncensored": {
                  "type": "string",
                  "title": "Image Generation (Flux-Dev-Uncensored)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using the uncensored Flux Dev model (unrestricted, NSFW).",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_venice_sd35": {
                  "type": "string",
                  "title": "Image Generation (Venice SD3.5)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using Stability AI's SD 3.5 Large (art, design).",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_fluently_xl": {
                  "type": "string",
                  "title": "Image Generation (Fluently-XL)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using Fluently-XL (aesthetics, lighting, realism).",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_lustify_sdxl": {
                  "type": "string",
                  "title": "Image Generation (Lustify-SDXL)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using Lustify SDXL (photorealistic, focus on NSFW).",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_pony_realism": {
                  "type": "string",
                  "title": "Image Generation (Pony-Realism)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using Pony Realism (high-detail, realistic, anime/characters).",
                  "default": "disabled",
                  "x-price-level": 2
                },
                "image_generation_stable_diffusion_3_5": {
                  "type": "string",
                  "title": "Image Generation (Stable Diffusion 3.5 - Alt ID)",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Generate images using Stability AI's SD 3.5 Large (alternative API ID).",
                  "default": "disabled",
                  "x-price-level": 2
                }
              }
            },
            "safe_mode": {
              "type": "boolean",
              "title": "Safe Mode",
              "description": "Whether to use safe mode. If enabled, this will blur images that are classified as having adult content",
              "default": true
            },
            "embed_exif_metadata": {
              "type": "boolean",
              "title": "Embed Exif Metadata",
              "description": "Embed prompt generation information into the image's EXIF metadata",
              "default": false
            },
            "hide_watermark": {
              "type": "boolean",
              "title": "Hide Watermark",
              "description": "Whether to hide the Venice watermark. Venice may ignore this parameter for certain generated content.",
              "default": true
            },
            "negative_prompt": {
              "type": "string",
              "title": "Default Negative Prompt",
              "description": "Default negative prompt to use if none is provided in the skill call.",
              "default": "(worst quality: 1.4), bad quality, nsfw"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for AIXBT API service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "Venice API Key",
                "x-link": "[Get your API key](https://venice.ai/)",
                "x-sensitive": true,
                "description": "Optional API key for Venice AI services. If not provided, the system key will be used."
              },
              "rate_limit_number": {
                "type": "integer",
                "title": "Rate Limit Number",
                "description": "Number of requests allowed per time window. Only applies if using an agent-specific API key."
              },
              "rate_limit_minutes": {
                "type": "integer",
                "title": "Rate Limit Minutes",
                "description": "Time window in minutes for rate limiting. Only applies if using an agent-specific API key."
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 2
        },
        "unrealspeech": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "UnrealSpeech",
          "description": "Convert text to natural-sounding speech with various voices and customization options",
          "x-icon": "https://ai.service.crestal.dev/skills/unrealspeech/unrealspeech.jpg",
          "x-tags": [
            "Audio",
            "Speech",
            "Text-to-Speech",
            "Voice"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "text_to_speech": {
                  "type": "string",
                  "title": "Text to Speech",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "description": "Convert text to natural-sounding speech with various voices and customization options",
                  "default": "disabled",
                  "x-price-level": 1
                }
              },
              "description": "States for each UnrealSpeech skill (disabled, public, or private)"
            },
            "api_key_provider": {
              "type": "string",
              "title": "API Key Provider",
              "description": "Provider of the API key for AIXBT API service",
              "enum": [
                "agent_owner"
              ],
              "x-enum-title": [
                "Owner Provided"
              ],
              "default": "agent_owner"
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "if": {
            "properties": {
              "api_key_provider": {
                "const": "agent_owner"
              }
            }
          },
          "then": {
            "properties": {
              "api_key": {
                "type": "string",
                "title": "UnrealSpeech API Key",
                "description": "API key for UnrealSpeech service",
                "x-link": "[Get your API key](https://unrealspeech.com/)",
                "x-sensitive": true
              },
              "rate_limit_number": {
                "type": "integer",
                "title": "Rate Limit Number",
                "description": "Number of requests allowed per time window, only valid if api_key is set"
              },
              "rate_limit_minutes": {
                "type": "integer",
                "title": "Rate Limit Minutes",
                "description": "Time window in minutes for rate limiting, only valid if api_key is set"
              }
            },
            "if": {
              "properties": {
                "enabled": {
                  "const": true
                }
              }
            },
            "then": {
              "required": [
                "api_key"
              ]
            }
          },
          "additionalProperties": true,
          "x-avg-price-level": 1
        },
        "lifi": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "type": "object",
          "title": "LiFi",
          "description": "Cross-chain token transfer and swap capabilities using the LiFi protocol",
          "x-icon": "https://ai.service.crestal.dev/skills/lifi/lifi.png",
          "x-tags": [
            "DeFi",
            "Blockchain",
            "Token Transfer",
            "Cross-chain"
          ],
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "Whether this skill is enabled",
              "default": false
            },
            "states": {
              "type": "object",
              "properties": {
                "token_quote": {
                  "type": "string",
                  "title": "Token Quote",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "default": "public",
                  "description": "Get token transfer quotes without executing transactions",
                  "x-price-level": 1
                },
                "token_execute": {
                  "type": "string",
                  "title": "Token Execute",
                  "enum": [
                    "disabled",
                    "public",
                    "private"
                  ],
                  "x-enum-title": [
                    "Disabled",
                    "Agent Owner + All Users",
                    "Agent Owner Only"
                  ],
                  "default": "private",
                  "description": "Execute token transfers (requires CDP wallet and cdp skills enabled)",
                  "x-price-level": 1
                }
              },
              "required": [
                "token_quote",
                "token_execute"
              ],
              "description": "States for each LiFi skill"
            },
            "default_slippage": {
              "type": "number",
              "title": "Default Slippage",
              "description": "Default slippage tolerance for token transfers (e.g., 0.03 for 3%)",
              "default": 0.03,
              "minimum": 0.001,
              "maximum": 0.5,
              "x-step": 0.001
            },
            "allowed_chains": {
              "type": "array",
              "title": "Allowed Chains",
              "description": "List of blockchain networks that can be used (if empty, all supported chains are allowed)",
              "items": {
                "type": "string",
                "examples": [
                  "ETH",
                  "POL",
                  "ARB",
                  "OPT",
                  "DAI"
                ]
              },
              "uniqueItems": true
            },
            "max_execution_time": {
              "type": "integer",
              "title": "Maximum Execution Time",
              "description": "Maximum time (in seconds) to wait for transaction confirmation for token_execute",
              "default": 300,
              "minimum": 60,
              "maximum": 1800
            }
          },
          "required": [
            "states",
            "enabled"
          ],
          "additionalProperties": true,
          "x-avg-price-level": 1
        }
      }
    },
    "autonomous": {
      "title": "Autonomous",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "string",
            "description": "Unique identifier for the autonomous configuration",
            "minLength": 1,
            "maxLength": 20,
            "pattern": "^[a-z0-9-]+$",
            "readOnly": true,
            "x-group": "internal"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name for this automated task",
            "maxLength": 50,
            "x-group": "autonomous"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Briefly describe what this automation does",
            "maxLength": 200,
            "x-group": "autonomous"
          },
          "minutes": {
            "title": "Frequency in Minutes",
            "type": "integer",
            "description": "How often to run (in minutes)",
            "x-group": "autonomous"
          },
          "cron": {
            "title": "Schedule",
            "type": "string",
            "description": "Advanced scheduling (cron format), mutually exclusive with minutes",
            "x-group": "autonomous"
          },
          "prompt": {
            "title": "Task Prompt",
            "type": "string",
            "description": "Prompt the agent will execute on schedule",
            "maxLength": 20000,
            "x-str-type": "prompt",
            "x-group": "autonomous"
          },
          "enabled": {
            "title": "Enabled",
            "type": "boolean",
            "description": "Turn automation on/off",
            "default": false,
            "x-group": "autonomous"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "description": "Set automated prompts and schedules for your agent.",
      "x-group": "autonomous",
      "x-inline": true
    },
    "example_intro": {
      "title": "Agent Greeting",
      "type": "string",
      "description": "This is the first thing users see when they meet your agent. Use it to explain what your agent does, the services it provides and how it fits into the Nation.",
      "maxLength": 2000,
      "x-group": "examples"
    },
    "examples": {
      "title": "Quick Action List",
      "type": "array",
      "maxItems": 6,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Action Name",
            "type": "string",
            "description": "Quick action will show up on the UI as this name",
            "maxLength": 50,
            "x-group": "examples"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Description of what this action does",
            "maxLength": 200,
            "x-group": "examples"
          },
          "prompt": {
            "title": "Prompt",
            "type": "string",
            "description": "When user clicks this action, the agent will execute this prompt",
            "maxLength": 2000,
            "x-str-type": "prompt",
            "x-group": "examples"
          }
        },
        "required": [
          "name",
          "description",
          "prompt"
        ]
      },
      "description": "Quick clickable actions users can use with the agent without having to type any text instructions.",
      "x-group": "examples"
    },
    "wallet_provider": {
      "title": "Wallet Provider",
      "type": "string",
      "description": "Provider of the agent's wallet",
      "enum": [
        "cdp"
      ],
      "default": "cdp",
      "x-group": "internal"
    },
    "network_id": {
      "title": "Network ID",
      "type": "string",
      "description": "Network identifier",
      "default": "base-mainnet",
      "enum": [
        "ethereum-mainnet",
        "ethereum-sepolia",
        "polygon-mainnet",
        "polygon-mumbai",
        "base-mainnet",
        "base-sepolia",
        "arbitrum-mainnet",
        "arbitrum-sepolia",
        "optimism-mainnet",
        "optimism-sepolia",
        "solana"
      ],
      "x-group": "internal"
    }
  },
  "additionalProperties": false
}